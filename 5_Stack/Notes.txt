Revision for stack

postfix - operators at right end

// Study Prefix,Infix,Postfix

  https://www.youtube.com/watch?v=4pIc9UBHJtk&list=PLgUwDviBIf0pOd5zvVVSzgpo6BaCpHT9c&index=3
  1. postfix evaluation - go from left to right beacause at left end only contains alphabet
  2. prefix evaluation - go from right to left beacause at right end only contains alphabet
  3. infix to postfix - based on precedence of operator (using stk)
  4. infix to prefix - i. reverse the input -> and change the brackets -> do infix to postfix ops -> reverse the ans
  5. postfix to infix - i. go from left to right -> whenever operator comes u pop two operands and place operator btwn them and close with bracket -> push into stack
  6. prefix to infix - i. same as above but go from right to left and sequece of chars should be same as in q.
  7. postfix to prefix - i.go from left to right -> if operator comes then pop top1 and top2 -> and push in stack in the format 'op-t2-t1'
  8. prefix to postfix - i.go from right to left -> same as above format is 't1-t2-op'



// Stack uisng Queue

1. add to the bottom of the queue while doing push operation

//Queue uisng stack

1. 2 stacks needed

